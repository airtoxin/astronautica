generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DashboardSession {
  id        String    @id @default(uuid())
  account   Account   @relation(fields: [accountId], references: [id])
  expiresAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accountId String
}

model Account {
  id                String             @id @default(uuid())
  email             String             @unique
  name              String
  dashboardSessions DashboardSession[]
  organizations     Organization[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
}

model Organization {
  id       String    @id @default(uuid())
  name     String
  accounts Account[]
  projects Project[]
}

model Project {
  id             String        @id @default(uuid())
  name           String
  testFiles      TestFile[]
  apiKeys        ApiKey[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
}

model ApiKey {
  id          String       @id @default(uuid())
  status      ApiKeyStatus
  description String?
  expiresAt   DateTime?
  lastUsedAt  DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  project     Project      @relation(fields: [projectId], references: [id])
  projectId   String
}

enum ApiKeyStatus {
  ENABLE
  DISABLE
}

model TestFile {
  id           String        @id @default(uuid())
  path         String
  testRequests TestRequest[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  project      Project       @relation(fields: [projectId], references: [id])
  projectId    String

  @@unique([path, projectId])
}

model TestRequest {
  id                 String   @id @default(uuid())
  name               String
  preRequest         Json?
  preRequestCallback String?
  request            Json
  response           Json
  testCallback       String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  testFile           TestFile @relation(fields: [testFileId], references: [id])
  testFileId         String

  @@unique([name, testFileId])
}
